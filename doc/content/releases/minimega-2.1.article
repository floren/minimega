minimega 2.1 release notes

* Introduction

The minimega development team is pleased to announce the release of minimega
2.1. This release includes several bugfixes and tweaks to the 2.0 release, as
well as substantive internal changes to pave the way for future development.
Several new usability features have been added which should make the
programmability and visibility of minimega environments much better.

* What's new

** Major changes and milestones

*** new web interface

The minimega web interface has been updated again; it now features a
live diagram of the network layout and a more modern look.

*** vm launch kvm and internal changes

In preparation for Linux container support, we have changed the way
the `vm`launch` command works. It now expects the type of the VM to
be launched; currently, only KVM is supported. Where you would have
previously run `vm`launch`10` to launch 10 VMs, you should now use
`vm`launch`kvm`10` to accomplish the same task.

*** tab completion

Tab completion now works for minimega commands, not just filenames. As
in bash, striking the TAB key after typing a sufficiently unique prefix
will complete the command; if there are multiple possible completions,
striking the TAB key again will show the possibilities.

*** runtime test framework

** Additional new features

*** vm config serial api

minimega can now set up regular (non-virtio) serial ports for your
VMs. The `vm`config`serial` command lets you specify how many ports
to create; these will show up on the VM as /dev/ttyS[0,1,2...] (or
COM[0,1,2...]); on the host side, the ports appear as unix sockets at
$minimega_runtime/<vm_id>/serialX.

*** bridge tunnel api

*** vm launch/start/stop/kill/tag range support

*** rfbplay ffmpeg transcoding

*** bridge trunk multiple trunks

*** .record api

*** mac generation

** Changes from previous versions

* Availability

minimega is available in several ways, both as pre-built distributions and
source. See the [[/articles/installing.article][installing]]
guide for more information.

** Debian package

minimega is available as an x86-64 debian package, available here.  It is known
to work in debian 7 (wheezy) and 8 (testing/jessie).

** tarball

A pre-built, x86-64 distribution is available in a single distributable tarball
here. It should be sufficient to simply unpack the tarball and run tools from
the `bin/` directory directly. Most default paths in minimega, vmbetter, and
other tools are built to be used in this way (i.e. `bin/minimega`, which will
then look for the web directory in `misc/web`).

** Building from source

Source of the entire distribution is available on
[[https://github.com/sandia-minimega/minimega][github]]. Follow the directions
for cloning or forking minimega on github.com. In order to build minimega, you
will need a Go 1.3+ compiler, libreadline, and libpcap headers.

